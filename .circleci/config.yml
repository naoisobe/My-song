# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  rubocop:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers-legacy
        environment:
          RAILS_ENV: test
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: root
    working_directory: ~/My-song
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      # Rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop

  rspec:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers-legacy
        environment:
          RAILS_ENV: test
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: root
    working_directory: ~/My-song
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      # Rspec
      - run:
          name: Rspec
          command: bundle exec rspec

orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  aws-ecs: circleci/aws-ecs@0.0.8
workflows:
  build_and_push_image:
    jobs:
      - aws-ecr/build-and-push-image:
        region: AWS_REGION
        account-url: AWS_ECR_ACCOUNT_URL
        repo: 'mysong'
        tag: "${CIRCLE_SHA1}"
      - aws-ecs/deploy-service-update:
        requires:
      - aws-ecr/build-and-push-image:
          family: 'ecr-task'
          cluster-name: 'mysong-cluster'
          service-name: 'mysong-service'
          container-image-name-updates: 'container=ecs-mysong,tag=${CIRCLE_SHA1}'

workflows:
  version: 2
  rubocop_rspec:
    jobs:
      - rubocop
      - rspec:
          requires:
            - rubocop
